{
	"info": {
		"_postman_id": "f31f497e-f493-7ba1-aeb3-ac86ca206a80",
		"name": "t6",
		"description": "t6 is an 'oriented-Data' platform to connect physical Objects with timeseries DB.\n\n## Introduction\n\nt6 is using either _Http_ or _Https_ protocols to manage your Objects, Flows and Data Points. \nEndpoints allows to manage your own Objects, Flows, Users, and Data Points using normalized verbs:\n\n* **GET** verb is used to retrieve information from t6 datastore;\n* **POST** verb is used to create a new element;\n* **PUT** verb is used to edit an existing elements;\n* **DELETE** verb is used to delete existing elements.\n\nAll API enpoints support json and optional _Http Headers_ can be provided:\n* Content-Type: _application/json_\n* Accept: _application/json_\n\n## Authentication\nTo create and get a _JWT Token_, you must authenticate yourself on the API by using the dedicated Endpoint.\nMost API endpoint require an Authentication to identify and approve the user request. This is done by adding Authorization: Bearer Header to the Http request.\n\n## Quota\n_Quota_ is defined during the registration process. When the limit is reached, an Http error message is sent by the API and the request is not processed: 429 Too Many Requests.\n\n## Pagination\nPagination is using the following parameters:\n* **size**: the size parameter allow to request the number of items you want to retrieve.\n* **page**: this page parameter allows to place cursor on the selected page.\n\ne.g.: _https://api.internetcollaboratif.info/v2.0.1/objects/?page=2&size=20_\nThis will generate the payload listing Objects from resource cursor 21 to 41.\n\nAdditionnaly, the json payload is containing the following data:\n* **parent**: url endpoint of the parent resource.\n* **self**: url endpoint of the current resource.\n* **first**: url endpoint of the first page/cursor for the current resource.\n* **last**: url endpoint of the last page/cursor for the current resource.\n* **prev**: url endpoint of the previous page/cursor for the current resource.\n* **next**: url endpoint of the next page/cursor for the current resource.\n\n## Http Statuses\n* **200 Success**: Server successfully understood the transaction.\n* **201 Created**: The Creation of a new resource was successful.\n* **400 Bad Request**: Require a Bearer Authentication.\n* **401 Not Authorized**: Require a Bearer JWTtoken Authentication.\n* **403 Forbidden**: JWTtoken used in transaction is not valid. Check your token and/or permission.\n* **404 Not Found**: We couldn't find the resource you are trying to access.\n* **405 Method Not Allowed**: API endpoint does not accept the method used.\n* **412 Precondition Failed**: Request input does not match prerequisites, and so, failed.\n* **429 Too Many Requests**: Request failed due to quota overlimit.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "General, public access",
			"item": [
				{
					"name": "authenticate userAccount to get a JWT token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "da329942-7ff9-4350-b544-dad04897f888",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b4a76676-003a-4eb8-832d-08dfeca3441e",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"token\", \"Bearer \"+response.token);",
									"postman.setEnvironmentVariable(\"refresh_token\", response.refresh_token);",
									"postman.setEnvironmentVariable(\"refreshTokenExp\", response.refreshTokenExp);",
									"",
									"pm.test(\"Response must have OK as status\", function () {",
									"    pm.expect( response.status ).to.equal( \"ok\" );",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"{{usernameAdmin}}\", \"password\": \"{{password}}\"}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/authenticate",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "authenticate client using Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f268a475-4143-4195-a2a3-9bed12ab8eac",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"token\", \"Bearer \"+response.token);",
									"",
									"pm.test(\"Response must have OK as status\", function () {",
									"    pm.expect( response.status ).to.equal( \"ok\" );",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"api_key\": \"{{api_key}}\", \"api_secret\": \"{{api_secret}}\", \"grant_type\": \"access_token\"}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/authenticate",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh JWT token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d371d3ca-a8c8-44fe-b7ee-9188defc400f",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"token\", \"Bearer \"+response.token);",
									"postman.setEnvironmentVariable(\"refresh_token\", response.refresh_token);",
									"",
									"pm.test(\"Response must have OK as status\", function () {",
									"    pm.expect( response.status ).to.equal( \"ok\" );",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"{{usernameAdmin}}\", \"grant_type\": \"refresh_token\", \"refresh_token\": \"{{refresh_token}}\"}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/authenticate",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all datatypes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4975f19c-ae19-4e6a-90b2-7c179019cb79",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/datatypes/",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"datatypes",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all units",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00100990-cdcd-4987-812c-bee03a67dec2",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/units/",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"units",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create New User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"token\", \"Bearer \"+response.token);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"email\": \"\"\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/users",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "(Deprecated) Generate Access Tokens",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9939ada-c477-47f3-a94a-6a89acef0865",
								"type": "text/javascript",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"api_key\", response.accessToken.data.attributes.key);",
									"postman.setEnvironmentVariable(\"api_secret\", response.accessToken.data.attributes.secret);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"memo\": \"12313213\"}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/users/accessTokens",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"users",
								"accessTokens"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Access Tokens",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c0c195e-3247-4b1d-ac4f-50f6e4ea02b7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/users/accessTokens",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"users",
								"accessTokens"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User active sessions list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c0c195e-3247-4b1d-ac4f-50f6e4ea02b7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/users/me/sessions",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"users",
								"me",
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"token\", \"Bearer \"+response.token);"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"email\": \"\"\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/users/",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0dbb1756-7f36-4aff-a883-2b87f67f28b7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/users/44800701-d6de-48f7-9577-4b3ea1fab81a",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"users",
								"44800701-d6de-48f7-9577-4b3ea1fab81a"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get self Current Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0dbb1756-7f36-4aff-a883-2b87f67f28b7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/users/me/token",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"users",
								"me",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DataPoint & Command",
			"item": [
				{
					"name": "1. DataPoint not signed, not crypted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12f584aa-6882-4851-b29a-760e179acfd0",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"value\": \"1. Datapoint not signed, not crypted\",\n\t\"text\": \"\",\n\t\"save\": \"true\",\n\t\"unit\": \"\",\n\t\"mqtt_topic\": \"test\",\n\t\"latitude\": \"39.800327\",\n\t\"longitude\": \"6.343530\",\n\t\"object_id\": \"54663ca2-619c-49ac-b9ac-cff4ffed8777\"\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/data/3",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"data",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. DataPoint signed, not crypted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12f584aa-6882-4851-b29a-760e179acfd0",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"",
									"pm.test(\"Response must have the same value as the one POSTed.\", function () {",
									"    pm.expect( response.data[0].attributes.value ).to.equal( pm.environment.get(\"expected_value\") );",
									"});",
									"pm.test(\"Status code is 200, 201, 202\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"postman.clearEnvironmentVariable(\"signedPayload\");",
									"postman.clearEnvironmentVariable(\"encryptedPayload\");",
									"postman.clearEnvironmentVariable(\"cryp_sender_object_id\");",
									"postman.clearEnvironmentVariable(\"signature_sender_object_id\");",
									"postman.clearEnvironmentVariable(\"expected_value\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3d21200b-48a5-4e3e-9ec2-22418073fc2d",
								"exec": [
									"",
									"/* SETTINGS ***************************************************************************************** */",
									"var signature_sender_object_id = \"dc89ab81-eecb-45e9-9e12-e3b71ea7f044\";",
									"var signature_secret = \"'[].Gdvj`a/'CfH9-N[<L}=W$6WtKQb5jasn/,fc%L9B^m^Gmdg<>hg+C9*o6UHyCjC`2K\";",
									"var header = {",
									"  \"alg\": \"HS256\",",
									"  \"typ\": \"JWT\"",
									"};",
									"var payload = {",
									"    \"value\": \"2. Datapoint signed, not crypted\",",
									"    \"text\": \"\",",
									"    \"publish\": \"true\",",
									"    \"save\": \"true\",",
									"    \"unit\": \"\",",
									"    \"mqtt_topic\": \"\",",
									"    \"latitude\": \"39.800327\",",
									"    \"longitude\": \"6.343530\",",
									"    \"object_id\": signature_sender_object_id",
									"};",
									"/* END OF SETTINGS *********************************************************************************** */",
									"",
									"var data = payload;",
									"function base64url(source) {",
									"  // Encode in classical base64",
									"  encodedSource = CryptoJS.enc.Base64.stringify(source);",
									"  ",
									"  // Remove padding equal characters",
									"  encodedSource = encodedSource.replace(/=+$/, '');",
									"  ",
									"  // Replace characters according to base64url specifications",
									"  encodedSource = encodedSource.replace(/\\+/g, '-');",
									"  encodedSource = encodedSource.replace(/\\//g, '_');",
									"  ",
									"  return encodedSource;",
									"}",
									"",
									"var stringifiedHeader = CryptoJS.enc.Utf8.parse(JSON.stringify(header));",
									"var encodedHeader = base64url(stringifiedHeader);",
									"",
									"var stringifiedData = CryptoJS.enc.Utf8.parse(JSON.stringify(data));",
									"var encodedData = base64url(stringifiedData);",
									"",
									"var signature = encodedHeader + \".\" + encodedData;",
									"signature = CryptoJS.HmacSHA256(signature, signature_secret);",
									"",
									"signature = base64url(signature);",
									"var signedPayload = encodedHeader + \".\" + encodedData + \".\" + signature;",
									"pm.environment.set(\"signedPayload\", signedPayload);",
									"pm.environment.set(\"signature_sender_object_id\", signature_sender_object_id);",
									"pm.environment.set(\"expected_value\", payload.value);",
									"",
									"console.log(signedPayload); //https://github.com/postmanlabs/postman-app-support/issues/4808#issuecomment-404083462",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"signedPayload\": \"{{signedPayload}}\",\n    \"object_id\": \"{{signature_sender_object_id}}\"\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/data/3",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"data",
								"3"
							]
						},
						"description": "This endpoint allows signed payload to be POSTed."
					},
					"response": []
				},
				{
					"name": "3. DataPoint not signed, crypted",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4958b060-c6bf-4a2d-a08e-58d61adbe119",
								"exec": [
									"var CryptoJS = require(\"crypto-js\");",
									"",
									"/* SETTINGS ***************************************************************************************** */",
									"var cryp_sender_object_id = \"dc89ab81-eecb-45e9-9e12-e3b71ea7f044\";",
									"var cryp_secret = \"B25ddfBdabBCcBCcCBFa2a5DbEcDcCee55b2C295DFFa779a99c726bE4bDeA2ee\"; // 32bits hexa",
									"var iv = CryptoJS.enc.Hex.parse( getIv() );",
									"",
									"var payload = {",
									"    \"value\": \"3. Datapoint not signed, crypted\",",
									"    \"text\": \"\",",
									"    \"publish\": \"true\",",
									"    \"save\": \"true\",",
									"    \"unit\": getUuidv4(),",
									"    \"mqtt_topic\": \"mqtt_topic/xyz\",",
									"    \"latitude\": getRandomFloat(0, 10),",
									"    \"longitude\": getRandomFloat(0, 10),",
									"    \"object_id\": cryp_sender_object_id",
									"};",
									"/* END OF SETTINGS *********************************************************************************** */",
									"",
									"",
									"",
									"",
									"",
									"function getRandomInt(min, max) {",
									"    return _.random(min, max);",
									"}",
									"function getRandomFloat(min, max) {",
									"    return _.random(min, max, true);",
									"}",
									"function getUuidv4() {",
									"  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {",
									"    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);",
									"    return v.toString(16);",
									"  });",
									"}",
									"function getIv() {",
									"  return 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'.replace(/[x]/g, function(c) {",
									"    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);",
									"    //return CryptoJS.enc.Hex.parse(v.toString(16));",
									"    return v.toString(16);",
									"  });",
									"}",
									"",
									"cryp_secret = CryptoJS.enc.Hex.parse(cryp_secret);",
									"var encryptedPayload = CryptoJS.AES.encrypt(JSON.stringify(payload).trim(), cryp_secret, {iv: iv});",
									"encryptedPayload = encryptedPayload.toString(CryptoJS.enc.base64); // Utf8, base64",
									"",
									"pm.environment.set(\"encryptedPayload\", iv+\":\"+encryptedPayload.trim());",
									"pm.environment.set(\"cryp_sender_object_id\", cryp_sender_object_id);",
									"pm.environment.set(\"expected_value\", payload.value);",
									"",
									"console.log(\"iv= \" + iv.toString() );",
									"console.log(\"payload= \");",
									"console.log(payload);",
									"console.log(\"encryptedPayload= \" + encryptedPayload); //https://github.com/postmanlabs/postman-app-support/issues/4808#issuecomment-404083462"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6cfcad31-1e34-40a7-87c6-2a2dd08595f4",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"",
									"pm.test(\"Response must have the same value as the one POSTed.\", function () {",
									"    pm.expect( response.data[0].attributes.value ).to.equal( pm.environment.get(\"expected_value\") );",
									"});",
									"pm.test(\"Status code is 200, 201, 202\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"postman.clearEnvironmentVariable(\"signedPayload\");",
									"postman.clearEnvironmentVariable(\"encryptedPayload\");",
									"postman.clearEnvironmentVariable(\"cryp_sender_object_id\");",
									"postman.clearEnvironmentVariable(\"signature_sender_object_id\");",
									"postman.clearEnvironmentVariable(\"expected_value\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"encryptedPayload\": \"{{encryptedPayload}}\",\n\t\"object_id\": \"{{cryp_sender_object_id}}\"\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/data/3",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"data",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Datapoint first signed, and then crypted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12f584aa-6882-4851-b29a-760e179acfd0",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"",
									"pm.test(\"Response must have the same value as the one POSTed.\", function () {",
									"    pm.expect( response.data[0].attributes.value ).to.equal( pm.environment.get(\"expected_value\") );",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"postman.clearEnvironmentVariable(\"signedPayload\");",
									"postman.clearEnvironmentVariable(\"encryptedPayload\");",
									"postman.clearEnvironmentVariable(\"cryp_sender_object_id\");",
									"postman.clearEnvironmentVariable(\"signature_sender_object_id\");",
									"postman.clearEnvironmentVariable(\"expected_value\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a2cac151-048d-4d78-84ea-cd884317f337",
								"exec": [
									"var CryptoJS = require(\"crypto-js\");",
									"",
									"/* SETTINGS ***************************************************************************************** */",
									"var cryp_sender_object_id = \"dc89ab81-eecb-45e9-9e12-e3b71ea7f044\";",
									"var cryp_secret = \"B25ddfBdabBCcBCcCBFa2a5DbEcDcCee55b2C295DFFa779a99c726bE4bDeA2ee\"; // 32bits hexa",
									"var iv = CryptoJS.enc.Hex.parse( getIv() );",
									"",
									"var signature_sender_object_id = \"dc89ab81-eecb-45e9-9e12-e3b71ea7f044\";",
									"var signature_secret = \"'[].Gdvj`a/'CfH9-N[<L}=W$6WtKQb5jasn/,fc%L9B^m^Gmdg<>hg+C9*o6UHyCjC`2K\";",
									"",
									"var header = {",
									"  \"alg\": \"HS256\",",
									"  \"typ\": \"JWT\"",
									"};",
									"var payload = {",
									"    \"value\": \"4. Datapoint first signed, and then crypted\",",
									"    \"text\": \"\",",
									"    \"publish\": \"true\",",
									"    \"save\": \"true\",",
									"    \"unit\": getUuidv4(),",
									"    \"mqtt_topic\": \"mqtt_topic/xyz\",",
									"    \"latitude\": getRandomFloat(0, 10),",
									"    \"longitude\": getRandomFloat(0, 10),",
									"    \"object_id\": cryp_sender_object_id",
									"};",
									"/* END OF SETTINGS *********************************************************************************** */",
									"",
									"function getRandomInt(min, max) {",
									"    return _.random(min, max);",
									"}",
									"function getRandomFloat(min, max) {",
									"    return _.random(min, max, true);",
									"}",
									"function getUuidv4() {",
									"  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {",
									"    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);",
									"    return v.toString(16);",
									"  });",
									"}",
									"function getIv() {",
									"  return 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'.replace(/[x]/g, function(c) {",
									"    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);",
									"    //return CryptoJS.enc.Hex.parse(v.toString(16));",
									"    return v.toString(16);",
									"  });",
									"}",
									"function base64url(source) {",
									"  // Encode in classical base64",
									"  encodedSource = CryptoJS.enc.Base64.stringify(source);",
									"  ",
									"  // Remove padding equal characters",
									"  encodedSource = encodedSource.replace(/=+$/, '');",
									"  ",
									"  // Replace characters according to base64url specifications",
									"  encodedSource = encodedSource.replace(/\\+/g, '-');",
									"  encodedSource = encodedSource.replace(/\\//g, '_');",
									"  ",
									"  return encodedSource;",
									"}",
									"",
									"",
									"var signedPayload = {",
									"    \"signedPayload\": \"\",",
									"    \"object_id\": signature_sender_object_id",
									"}",
									"cryp_secret = CryptoJS.enc.Hex.parse(cryp_secret);",
									"pm.environment.set(\"expected_value\", payload.value);",
									"",
									"",
									"// 1. Signature",
									"var stringifiedHeader = CryptoJS.enc.Utf8.parse(JSON.stringify(header));",
									"var encodedHeader = base64url(stringifiedHeader);",
									"",
									"var data = payload;",
									"var stringifiedData = CryptoJS.enc.Utf8.parse(JSON.stringify(data));",
									"var encodedData = base64url(stringifiedData);",
									"",
									"var signature = encodedHeader + \".\" + encodedData;",
									"signature = CryptoJS.HmacSHA256(signature, signature_secret);",
									"",
									"signature = base64url(signature);",
									"var signedPayloadContent = encodedHeader + \".\" + encodedData + \".\" + signature;",
									"",
									"signedPayload.signedPayload = signedPayloadContent;",
									"var payload = signedPayloadContent;",
									"console.log(\"1. Signature:\");",
									"console.log(signedPayload);",
									"",
									"payload = signedPayload;",
									"",
									"// 2. Encryption",
									"var encryptedPayload = CryptoJS.AES.encrypt(JSON.stringify(payload).trim(), cryp_secret, {iv: iv});",
									"encryptedPayload = encryptedPayload.toString(CryptoJS.enc.base64); // Utf8, base64",
									"",
									"pm.environment.set(\"encryptedPayload\", iv+\":\"+encryptedPayload.trim());",
									"pm.environment.set(\"cryp_sender_object_id\", cryp_sender_object_id);",
									"",
									"console.log(\"2. Encryption:\");",
									"console.log(encryptedPayload); //https://github.com/postmanlabs/postman-app-support/issues/4808#issuecomment-404083462",
									"//console.log(JSON.stringify(payload));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"encryptedPayload\": \"{{encryptedPayload}}\",\n\t\"object_id\": \"{{cryp_sender_object_id}}\"\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/data/3",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"data",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Post Command to switch on Light using mqttCommand",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12f584aa-6882-4851-b29a-760e179acfd0",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"text\": \"This event will command the Object and set Light to ON/OFF\",\n\t\"value\": \"0\",\n\t\"save\": \"false\",\n\t\"object_id\": \"a06dfa8a-ddeb-4bf6-885a-6fb4f1f84b01\"\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/data/3",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"data",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Datapoints",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/data/ce40b2f3-56bc-4946-910d-8d8b2835a177?limit=100&sort=desc",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"data",
								"ce40b2f3-56bc-4946-910d-8d8b2835a177"
							],
							"query": [
								{
									"key": "limit",
									"value": "100",
									"description": "Set the number of expected resources."
								},
								{
									"key": "sort",
									"value": "desc",
									"description": "Set to sorting order, the value can be either \"asc\" dor ascending or \"desc\" for descending."
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "1. Object",
			"item": [
				{
					"name": "Get objects list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/objects/?page=1&size=20",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"objects",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an object",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "656fd260-2961-482b-af25-d91b35b8488d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/objects/dc89ab81-eecb-45e9-9e12-e3b71ea7f044",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"objects",
								"dc89ab81-eecb-45e9-9e12-e3b71ea7f044"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Object Custom Parameter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/objects/54663ca2-619c-49ac-b9ac-cff4ffed8777/ActivationDateOnGuruplug",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"objects",
								"54663ca2-619c-49ac-b9ac-cff4ffed8777",
								"ActivationDateOnGuruplug"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Object Custom Parameter",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"foo\",\n    \"value\": \"bar2\",\n    \"type\": \"String\"\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/objects/32ca94b5-4a2f-4049-bf88-3a792b9b01f5/foo",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"objects",
								"32ca94b5-4a2f-4049-bf88-3a792b9b01f5",
								"foo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add an object",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"My object description\",\n    \"ipv4\": \"127.0.0.1\",\n    \"ipv6\": \"2001:0db8:0000:85a3:0000:0000:ac1f:8001\",\n    \"name\": \"My Object\",\n    \"position\": \"LivingRoom\",\n    \"type\": \"phone\",\n    \"longitude\": \"\",\n    \"latitude\": \"\",\n    \"is_public\": \"false\"\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/objects/",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"objects",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit an object",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Canon MG3250\",\n    \"user_id\": \"44800701-d6de-48f7-9577-4b3ea1fab81a\",\n    \"type\": \"devices_other\",\n    \"description\": \"Brand name\\tCanon\\nItem Weight\\t5.5 Kg\\nProduct Dimensions\\t44.9 x 30.4 x 15.2 cm\\nItem model number\\t6223B008AA\\nSeries\\tPixma MG 3250\\nScreen Size\\t7 inches\\nWireless Type\\t802.11B, 802.11G, 802.11n\\nWattage\\t20 watts\",\n    \"secret_key\": \"'[].Gdvj`a/'CfH9-N[<L}=W$6WtKQb5jasn/,fc%L9B^m^Gmdg<>hg+C9*o6UHyCjC`2K\",\n    \"secret_key_crypt\": \"B25ddfBdabBCcBCcCBFa2a5DbEcDcCee55b2C295DFFa779a99c726bE4bDeA2ee\",\n    \"position\": \"Bed Room\",\n    \"ipv4\": \"192.168.0.12\",\n    \"ipv6\": \"\",\n    \"is_public\": \"false\",\n    \"longitude\": \"2.31812\",\n    \"latitude\": \"48.90333\",\n    \"meta\": {\n        \"created\": 1456863889408,\n        \"revision\": 20,\n        \"updated\": 1557319239162,\n        \"version\": 0\n    },\n    \"parameters\": []\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/objects/dc89ab81-eecb-45e9-9e12-e3b71ea7f044",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"objects",
								"dc89ab81-eecb-45e9-9e12-e3b71ea7f044"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an object",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/objects/c14b7cdd-3244-495e-a8da-7b580b9ac7d3",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"objects",
								"c14b7cdd-3244-495e-a8da-7b580b9ac7d3"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2. Flow",
			"item": [
				{
					"name": "Get Flows",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/flows/?page=1&size=200&name=Outdoor Temperature",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"flows",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "200"
								},
								{
									"key": "name",
									"value": "Outdoor Temperature"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a flow",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Flow\",\n    \"data_type\": \"\",\n    \"unit\": \"\",\n    \"mqtt_topic\": \"123\",\n    \"permission\": \"600\",\n    \"objects\": []\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/flows/",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"flows",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit a flow",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Flow updated\",\n    \"data_type\": \"\",\n    \"unit\": \"\",\n    \"mqtt_topic\": \"123456\",\n    \"permission\": \"600\",\n    \"objects\": []\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/flows/14480f34-c97a-4830-bfae-3a3061f4ecad",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"flows",
								"14480f34-c97a-4830-bfae-3a3061f4ecad"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a flow",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/flows/14480f34-c97a-4830-bfae-3a3061f4ecad",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"flows",
								"14480f34-c97a-4830-bfae-3a3061f4ecad"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Dashboard",
			"item": [
				{
					"name": "Get Dashboards",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/dashboards/?page=1&size=20",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"dashboards",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a dashboard",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/dashboards/e85a67d2-7840-4878-b647-112b304c9506",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"dashboards",
								"e85a67d2-7840-4878-b647-112b304c9506"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Snippet",
			"item": [
				{
					"name": "Get Snippets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/snippets/?page=1&size=20",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"snippets",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit a Snippet",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My Simple Clock\",\n    \"user_id\": \"44800701-d6de-48f7-9577-4b3ea1fab81a\",\n    \"type\": \"clock\",\n    \"icon\": \"fa fa-bullhorn\",\n    \"color\": \"#ffffff\",\n    \"flows\": []\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/snippets/5d6c49dc-5ca0-4b72-8ffa-3a8f2b307fd2",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"snippets",
								"5d6c49dc-5ca0-4b72-8ffa-3a8f2b307fd2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a Snippet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Temperature Indoor\",\n    \"user_id\": \"44800701-d6de-48f7-9577-4b3ea1fab81a\",\n    \"type\": \"valuedisplay\",\n    \"icon\": \"developer_board\",\n    \"color\": \"#ffffff\",\n    \"flows\": [\n        \"6d844fbf-29c0-4a41-8c6a-0e9f3336cea3\"\n    ]\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/snippets/",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"snippets",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a snippet",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/snippets/76296935-8476-45a0-9b73-9805862354a2",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"snippets",
								"76296935-8476-45a0-9b73-9805862354a2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "5. Rule",
			"item": [
				{
					"name": "Get Rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/rules/?page=1&size=20",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"rules",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit a Rule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n                \"name\": \"Test notification\",\n                \"user_id\": \"44800701-d6de-48f7-9577-4b3ea1fab81a\",\n                \"id\": \"2b2bbd54-c675-45db-a89c-6a63fc331bba\",\n                \"rule\": {\n                    \"conditions\": {\n                        \"all\": [\n                            {\n                                \"fact\": \"user_id\",\n                                \"operator\": \"equal\",\n                                \"value\": \"44800701-d6de-48f7-9577-4b3ea1fab81a\"\n                            },\n                            {\n                                \"fact\": \"environment\",\n                                \"operator\": \"equal\",\n                                \"value\": \"development\"\n                            }\n                        ]\n                    },\n                    \"event\": {\n                        \"type\": \"httpWebhook\",\n                        \"params\": {\n                            \"method\": \"GET\",\n                            \"url\": \"https://support.oneskyapp.com/hc/en-us/article_attachments/202761627/example_1.json\",\n                            \"strictSSL\": true,\n                            \"headers\": {\n                                \"Content-Type\": \"application/json\"\n                            },\n                            \"body\": {}\n                        }\n                    },\n                    \"priority\": 2\n                },\n                \"active\": false,\n                \"meta\": {\n                    \"revision\": 6,\n                    \"created\": 1541855719663,\n                    \"version\": 0,\n                    \"updated\": 1541858123699\n                }\n            }"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/rules/2b2bbd54-c675-45db-a89c-6a63fc331bba",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"rules",
								"2b2bbd54-c675-45db-a89c-6a63fc331bba"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/rules/5aae4fc2-6a22-4624-beee-c19ee3179195",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"rules",
								"5aae4fc2-6a22-4624-beee-c19ee3179195"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a Rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"mqttCommand on a specific flow\",\n    \"user_id\": \"44800701-d6de-48f7-9577-4b3ea1fab81a\",\n    \"rule\": {\n        \"conditions\": {\n            \"all\": [\n                {\n                    \"fact\": \"environment\",\n                    \"operator\": \"equal\",\n                    \"value\": \"development\"\n                },\n                {\n                    \"fact\": \"flow\",\n                    \"operator\": \"equal\",\n                    \"value\": \"3\"\n                }\n            ]\n        },\n        \"event\": {\n            \"type\": \"mqttCommand\",\n            \"params\": {\n                \"message\": \"\",\n                \"mqtt_topic\": \"\"\n            }\n        },\n        \"priority\": 1\n    },\n    \"active\": true,\n    \"meta\": {\n        \"revision\": 7,\n        \"created\": 1465818172007,\n        \"version\": 0,\n        \"updated\": 1557230804728\n    }\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/rules",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"rules"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "6. Mqtt",
			"item": [
				{
					"name": "Get Mqtts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/mqtts/?page=1&size=20",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"mqtts",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "20"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Administration",
			"item": [
				{
					"name": "Notifications (email)",
					"item": [
						{
							"name": "Get (Html) Welcome reminder email",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ENDPOINT}}/v{{API_VERSION}}/notifications/debug/reminder",
									"host": [
										"{{ENDPOINT}}"
									],
									"path": [
										"v{{API_VERSION}}",
										"notifications",
										"debug",
										"reminder"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get (Html) loginfailure email",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ENDPOINT}}/v{{API_VERSION}}/notifications/debug/loginfailure",
									"host": [
										"{{ENDPOINT}}"
									],
									"path": [
										"v{{API_VERSION}}",
										"notifications",
										"debug",
										"loginfailure"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get (Html) changePassword email",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ENDPOINT}}/v{{API_VERSION}}/notifications/debug/change-password",
									"host": [
										"{{ENDPOINT}}"
									],
									"path": [
										"v{{API_VERSION}}",
										"notifications",
										"debug",
										"change-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get (Html) forgot-password email",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ENDPOINT}}/v{{API_VERSION}}/notifications/debug/forgot-password",
									"host": [
										"{{ENDPOINT}}"
									],
									"path": [
										"v{{API_VERSION}}",
										"notifications",
										"debug",
										"forgot-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get (Html) newsletter",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ENDPOINT}}/v{{API_VERSION}}/notifications/debug/newsletters%2f2019%2f2019-03-xx-newsletter",
									"host": [
										"{{ENDPOINT}}"
									],
									"path": [
										"v{{API_VERSION}}",
										"notifications",
										"debug",
										"newsletters%2f2019%2f2019-03-xx-newsletter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Notifications unsubscription list",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ENDPOINT}}/v{{API_VERSION}}/notifications/list/unsubscribed",
									"host": [
										"{{ENDPOINT}}"
									],
									"path": [
										"v{{API_VERSION}}",
										"notifications",
										"list",
										"unsubscribed"
									]
								}
							},
							"response": []
						},
						{
							"name": "Send (email) reminder",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ENDPOINT}}/v{{API_VERSION}}/notifications/mail/reminder",
									"host": [
										"{{ENDPOINT}}"
									],
									"path": [
										"v{{API_VERSION}}",
										"notifications",
										"mail",
										"reminder"
									]
								}
							},
							"response": []
						},
						{
							"name": "Send (email) newsletter",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ENDPOINT}}/v{{API_VERSION}}/notifications/mail/newsletter?year=2019&template=2019-03-xx-newsletter",
									"host": [
										"{{ENDPOINT}}"
									],
									"path": [
										"v{{API_VERSION}}",
										"notifications",
										"mail",
										"newsletter"
									],
									"query": [
										{
											"key": "year",
											"value": "2019"
										},
										{
											"key": "template",
											"value": "2019-03-xx-newsletter"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Send (email) changePassword",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ENDPOINT}}/v{{API_VERSION}}/notifications/mail/changePassword",
									"host": [
										"{{ENDPOINT}}"
									],
									"path": [
										"v{{API_VERSION}}",
										"notifications",
										"mail",
										"changePassword"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Add a unit",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\"\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/units/",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"units",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get unit",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/units/",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"units",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a unit",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/units/31c38904-2482-4cce-b0de-6dc9efbc2d33",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"units",
								"31c38904-2482-4cce-b0de-6dc9efbc2d33"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a datatype",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"geo\"\n}"
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/datatypes/",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"datatypes",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get datatypes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/datatypes/",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"datatypes",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a datatype",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/datatypes/7fea96e4-38ec-4c6f-8dd2-e9df96f7dedd",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"datatypes",
								"7fea96e4-38ec-4c6f-8dd2-e9df96f7dedd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/users/list",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"users",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset tokens for all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b4708096-91fa-4e2c-834f-a89377b3b97d",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"",
									"pm.test(\"Response must have\", function () {",
									"    pm.expect( response.status ).to.equal( \"done\" );",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/notifications/resetAllUsersTokens",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"notifications",
								"resetAllUsersTokens"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PWA",
			"item": [
				{
					"name": "index - Get PWA index cards",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8abb462-63f6-4226-97aa-f1ff0f79135e",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/index/",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"index",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "terms - Get PWA Terms&Conditions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8abb462-63f6-4226-97aa-f1ff0f79135e",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/terms/",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"terms",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "status - Get PWA Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8abb462-63f6-4226-97aa-f1ff0f79135e",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ENDPOINT}}/v{{API_VERSION}}/terms/",
							"host": [
								"{{ENDPOINT}}"
							],
							"path": [
								"v{{API_VERSION}}",
								"terms",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "0575d412-2ed4-491d-84be-eff76747d167",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "3acebc4c-eb3e-46d8-89ca-d196f99e859f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}